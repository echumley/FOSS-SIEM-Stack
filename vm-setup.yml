---
- name: Install Docker and dependencies for AIO SIEM deployment
  hosts: all
  become: true
  vars:
    container_count: 4
    default_container_name: docker
    default_container_image: ubuntu
    default_container_command: sleep 1d

  tasks:
    # Installs updates
    - name: Install updates on Ubuntu
      package:
        upgrade: dist
        update_cache: true
      tags: always

    # Installs the aptitute package manager
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    # Installs the Docker dependencies
    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          - python3-pip
          - virtualenv
          - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu focal stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: Install Docker Module for Python
      pip:
        name: docker

    - name: Add remote "ethan" user to "docker" group
      user:
        name: "ethan"
        group: "docker"
        append: yes
      tags:
        - docker

    - name: Install docker-compose
      get_url: 
        url : https://github.com/docker/compose/releases/download/1.25.1-rc1/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 'u+x,g+x'

# Install and configure Fail2Ban
# Install and configure Crowdsec
# Install and configure the Wazuh Agent
# Install and configure Promtail
# Install and configure the Prometheus Node Exporter

# ----- For future use -----
#    - name: Pull default Docker image
#      community.docker.docker_image:
#        name: "{{ default_container_image }}"
#        source: pull
#
#    - name: Create default containers
#      community.docker.docker_container:
#        name: "{{ default_container_name }}{{ item }}"
#        image: "{{ default_container_image }}"
#        command: "{{ default_container_command }}"
#        state: present
#      with_sequence: count={{ container_count }}